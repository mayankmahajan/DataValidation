SET spark.sql.hive.version=0.13.1
SET spark.sql.parquet.filterPushdown=true
SET spark.sql.hive.convertMetastoreParquet=true
SET spark.sql.parquet.cacheMetadata=true
spark-sql> CREATE TEMPORARY FUNCTION DenseVectorUDF as 'com.guavus.densevectorudf.DenseVectorUDF'; CREATE TEMPORARY FUNCTION peakUDF as 'com.guavus.densevectorudf.PeakDenseVectorUDF'; CREATE TEMPORARY FUNCTION genericUDAF as 'com.guavus.densevectorudf.GenericDenseVectorUDAFResolver'; CREATE TEMPORARY FUNCTION averageUDF as 'com.guavus.densevectorudf.AverageDenseVectorUDF';use rc2p61db_temp; select sourcesiteid, sourcesitetypeid, sourcesiteelementid, nfnameid, isipv6, timestamp, DenseVectorUDF(T.Downlinkbyte), DenseVectorUDF(T.upLinkByteBuffer), DenseVectorUDF(T.uplinkflowbuffer),  DenseVectorUDF(T.downlinkflowbuffer)  , DenseVectorUDF(T.uplinkcostbuffer), DenseVectorUDF(T.downlinkcostbuffer) from (select sourcesiteid, sourcesitetypeid, sourcesiteelementid, nfnameid, isipv6 , timestamp, genericUDAF(downlinkbytebuffer) as Downlinkbyte, genericUDAF(uplinkbytebuffer) as  upLinkByteBuffer, genericUDAF(uplinkflowbuffer) as uplinkflowbuffer,  genericUDAF(downlinkflowbuffer) as downlinkflowbuffer , genericUDAF(uplinkcostbuffer) as  uplinkcostbuffer, genericUDAF(downlinkcostbuffer) as downlinkcostbuffer from  f_nrmca_60min_3600_sitedatacube where timestamp=1450915200 ORDER BY T.Downlinkbyte DESC group by sourcesiteid, sourcesitetypeid, sourcesiteelementid, nfnameid, isipv6, timestamp) T;
spark-sql> 